/**
 * Created by cfraser on 2014-04-27.
 */


( function () {
/*
 Problem 1
 If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

 Find the sum of all the multiples of 3 or 5 below 1000.

 Resources:
 1) http://www.algebra.com/algebra/homework/Sequences-and-series.faq.question.427328.html
 2) http://www.factmonster.com/ipka/A0933353.html
*/
    var problemOne = function (multiples, limit) {
        var answer = 0;

        var largestMultiple = function (multiple, limit) {
            var largestMultiple;
            // quickly find the largest multiple under the limit
            for (largestMultiple = limit - 1; largestMultiple > 0; largestMultiple--) {
                if (largestMultiple % multiple == 0) {
                        break;
                }
            }

            return largestMultiple;
        }

        var sumMultiples = function (number, limit) {
            var sumMultiples = 0,
                largest = largestMultiple(number, limit);

            for (var x = 1; x <= largest / number; x++) {
                sumMultiples += number * x;
            }

            return sumMultiples;
        }


        for (var x = 0; x < multiples.length; x++) {
            answer += sumMultiples(multiples[x], limit);

        }

        // TODO: We know that we're only getting two items in the array. This could
        // TODO: be refactored later to support an unknown array size.
        var commonMultiple = multiples[0] * multiples[1];

        // remove one set of common multiples, since we added the common multiples twice.
        answer -= sumMultiples(commonMultiple, limit);

        return answer;
    }

/*
 Problem 2.

 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

 Resources:

 1) My brain. ;) - this seemed pretty straight forward when I read the problem.

 */
    var problemTwo = function (limit) {
        var values = [0, 1],
            sum = 0,
            answer = 0;

        // I'd probably break this out into a utility library if this problem wasn't so
        // self contained.
        var isEven = function( value ) {
            if (value % 2 == 0) {
                return true;
            }
            else {
                return false;
            }
        }

        while (sum < limit) {
            // Only accumulate the even sums.
            if (isEven(sum)) {
                answer += sum;
            }

            sum = values[0] + values [1];

            // This seems like the cleanest way to sum the elements of the sequence.
            // Add the latest sum to the right most side of the array, and drop the left most.
            values.push(sum);
            values.shift();
        }

        return answer;
    }


    /*

     Problem 3
     The prime factors of 13195 are 5, 7, 13 and 29.

     What is the largest prime factor of the number 600851475143 ?

     Resources:

     1) http://www.mathsisfun.com/prime-factorization.html
     2) http://www.mathsisfun.com/numbers/factors-all-tool.html

     */


    var problemThree = function ( upperBound ) {
        // The largest prime starts at 2 as it's the prime number we start with.
        var largestPrime = 2,
            lowerBound = 2;

        var isPrime = function (number) {
            // Prime numbers are only divisble by 1 and themselves.
            // So we'll test the range of numbers outside that set.
            for (var x = 2; x < number; x++) {
                if ( number % x == 0) {
                    return false;
                }
            }
            return true;
        }

        for (var x = lowerBound; x <= upperBound; x++) {
            if (upperBound % x == 0) {
                // When we find a factor of the current upper bound adjust the upper bound and test for prime.
                upperBound = upperBound / x;
                if (isPrime(x)) {
                    largestPrime = x;
                }
                else if (isPrime(upperBound)) {
                    largestPrime = upperBound;
                }

                // reset the counter.
                x = 1;
            }
        }

        return largestPrime;
    }

    var main = function() {
        var startTime;
        var now = function() {
            return new Date().getTime();
        }
        console.log("\n-------------------------------------------------------------------------------------------------------------------------------------\n\n");
        console.log("Problem 1\n" +
            "If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.\n\n" +
            "Find the sum of all the multiples of 3 or 5 below 1000.\n\n" +
            "Resources:\n" +
            "1) http://www.algebra.com/algebra/homework/Sequences-and-series.faq.question.427328.html\n\n" +
            "Sn = (n/2) * (a1 + an)\n" +
            "Sn = the sum of the n terms in the sequence.\n" +
            "a1 = the first term in the sequence." +
            "an = the nth term in the sequence.\n\n");
        startTime = now();
        console.log("Answer: " + problemOne([3, 5], 1000));
        console.log("Compute time: " + (now() - startTime)  + "ms");
        console.log("\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\n");

        console.log("Problem 2\n" +
            "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n\n" +
            "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n\n" +
            "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n\n");
        startTime = now();
        console.log("Answer: " + problemTwo(4000000));
        console.log("Compute time: " + (now() - startTime)  + "ms");
        console.log("\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\n");

        console.log("Problem 3\n" +
            "The prime factors of 13195 are 5, 7, 13 and 29.\n\n" +
            "What is the largest prime factor of the number 600851475143 ?\n\n");
        startTime = now();
        console.log("Answer: " + problemThree(600851475143));
        console.log("Compute time: " + (now() - startTime) + "ms");
        console.log("\n\n-------------------------------------------------------------------------------------------------------------------------------------\n\n");
    }

    main();
})();
